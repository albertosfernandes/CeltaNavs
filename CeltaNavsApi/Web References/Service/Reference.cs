//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CeltaNavsApi.Service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CeltaSATServiceSoap", Namespace="http://celtaware.com.br/")]
    public partial class CeltaSATService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSaleMovementOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelSaleMovementOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultSATOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestEndToEndOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultOperacionalStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CeltaSATService() {
            this.Url = global::CeltaNavsApi.Properties.Settings.Default.CeltaNavsApi_Service_CeltaSATService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSaleMovementCompletedEventHandler SendSaleMovementCompleted;
        
        /// <remarks/>
        public event CancelSaleMovementCompletedEventHandler CancelSaleMovementCompleted;
        
        /// <remarks/>
        public event ConsultSATCompletedEventHandler ConsultSATCompleted;
        
        /// <remarks/>
        public event TestEndToEndCompletedEventHandler TestEndToEndCompleted;
        
        /// <remarks/>
        public event ConsultOperacionalStatusCompletedEventHandler ConsultOperacionalStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://celtaware.com.br/SendSaleMovement", RequestNamespace="http://celtaware.com.br/", ResponseNamespace="http://celtaware.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSaleMovement(string saleMovementXml, out string status) {
            object[] results = this.Invoke("SendSaleMovement", new object[] {
                        saleMovementXml});
            status = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSaleMovementAsync(string saleMovementXml) {
            this.SendSaleMovementAsync(saleMovementXml, null);
        }
        
        /// <remarks/>
        public void SendSaleMovementAsync(string saleMovementXml, object userState) {
            if ((this.SendSaleMovementOperationCompleted == null)) {
                this.SendSaleMovementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSaleMovementOperationCompleted);
            }
            this.InvokeAsync("SendSaleMovement", new object[] {
                        saleMovementXml}, this.SendSaleMovementOperationCompleted, userState);
        }
        
        private void OnSendSaleMovementOperationCompleted(object arg) {
            if ((this.SendSaleMovementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSaleMovementCompleted(this, new SendSaleMovementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://celtaware.com.br/CancelSaleMovement", RequestNamespace="http://celtaware.com.br/", ResponseNamespace="http://celtaware.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CancelSaleMovement(string xmlCancelSaleMovement, out string status) {
            object[] results = this.Invoke("CancelSaleMovement", new object[] {
                        xmlCancelSaleMovement});
            status = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CancelSaleMovementAsync(string xmlCancelSaleMovement) {
            this.CancelSaleMovementAsync(xmlCancelSaleMovement, null);
        }
        
        /// <remarks/>
        public void CancelSaleMovementAsync(string xmlCancelSaleMovement, object userState) {
            if ((this.CancelSaleMovementOperationCompleted == null)) {
                this.CancelSaleMovementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelSaleMovementOperationCompleted);
            }
            this.InvokeAsync("CancelSaleMovement", new object[] {
                        xmlCancelSaleMovement}, this.CancelSaleMovementOperationCompleted, userState);
        }
        
        private void OnCancelSaleMovementOperationCompleted(object arg) {
            if ((this.CancelSaleMovementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelSaleMovementCompleted(this, new CancelSaleMovementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://celtaware.com.br/ConsultSAT", RequestNamespace="http://celtaware.com.br/", ResponseNamespace="http://celtaware.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultSAT() {
            object[] results = this.Invoke("ConsultSAT", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultSATAsync() {
            this.ConsultSATAsync(null);
        }
        
        /// <remarks/>
        public void ConsultSATAsync(object userState) {
            if ((this.ConsultSATOperationCompleted == null)) {
                this.ConsultSATOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultSATOperationCompleted);
            }
            this.InvokeAsync("ConsultSAT", new object[0], this.ConsultSATOperationCompleted, userState);
        }
        
        private void OnConsultSATOperationCompleted(object arg) {
            if ((this.ConsultSATCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultSATCompleted(this, new ConsultSATCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://celtaware.com.br/TestEndToEnd", RequestNamespace="http://celtaware.com.br/", ResponseNamespace="http://celtaware.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestEndToEnd(string saleMovementXml) {
            object[] results = this.Invoke("TestEndToEnd", new object[] {
                        saleMovementXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestEndToEndAsync(string saleMovementXml) {
            this.TestEndToEndAsync(saleMovementXml, null);
        }
        
        /// <remarks/>
        public void TestEndToEndAsync(string saleMovementXml, object userState) {
            if ((this.TestEndToEndOperationCompleted == null)) {
                this.TestEndToEndOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestEndToEndOperationCompleted);
            }
            this.InvokeAsync("TestEndToEnd", new object[] {
                        saleMovementXml}, this.TestEndToEndOperationCompleted, userState);
        }
        
        private void OnTestEndToEndOperationCompleted(object arg) {
            if ((this.TestEndToEndCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestEndToEndCompleted(this, new TestEndToEndCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://celtaware.com.br/ConsultOperacionalStatus", RequestNamespace="http://celtaware.com.br/", ResponseNamespace="http://celtaware.com.br/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ConsultOperacionalStatus() {
            object[] results = this.Invoke("ConsultOperacionalStatus", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultOperacionalStatusAsync() {
            this.ConsultOperacionalStatusAsync(null);
        }
        
        /// <remarks/>
        public void ConsultOperacionalStatusAsync(object userState) {
            if ((this.ConsultOperacionalStatusOperationCompleted == null)) {
                this.ConsultOperacionalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultOperacionalStatusOperationCompleted);
            }
            this.InvokeAsync("ConsultOperacionalStatus", new object[0], this.ConsultOperacionalStatusOperationCompleted, userState);
        }
        
        private void OnConsultOperacionalStatusOperationCompleted(object arg) {
            if ((this.ConsultOperacionalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultOperacionalStatusCompleted(this, new ConsultOperacionalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SendSaleMovementCompletedEventHandler(object sender, SendSaleMovementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSaleMovementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSaleMovementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void CancelSaleMovementCompletedEventHandler(object sender, CancelSaleMovementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelSaleMovementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelSaleMovementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConsultSATCompletedEventHandler(object sender, ConsultSATCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultSATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultSATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void TestEndToEndCompletedEventHandler(object sender, TestEndToEndCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestEndToEndCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestEndToEndCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void ConsultOperacionalStatusCompletedEventHandler(object sender, ConsultOperacionalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultOperacionalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultOperacionalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591